{
  "code": {
    "baseCode": [
      { "type": "html", "data": "<t-table-page" },
      { "type": "html", "data": "  :loading=\"table.loading\"" },
      { "type": "html", "data": "  :data=\"table.data\"" },
      { "type": "html", "data": "  :page-size=\"table.pageSize\"" },
      { "type": "html", "data": "  height=\"300px\"" },
      { "type": "html", "data": ">" },
      { "type": "html", "data": "  <t-table-index />" },
      {
        "type": "html",
        "data": "  <t-table-column prop=\"date\" label=\"日期\" width=\"180\" />"
      },
      {
        "type": "html",
        "data": "  <t-table-column prop=\"name\" label=\"姓名\" width=\"180\" />"
      },
      { "type": "html", "data": "  <t-table-column prop=\"address\" label=\"地址\" />" },
      { "type": "html", "data": "</t-table-page>" },
      { "type": "html", "data": "" },
      { "type": "html", "data": "<script>" },
      { "type": "js", "data": "export default {" },
      { "type": "js", "data": "  data() {" },
      { "type": "js", "data": "    return {" },
      { "type": "js", "data": "      table: { loading: false, data: [], pageSize: 10 }" },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  mounted() {" },
      { "type": "js", "data": "    this.table.data = [ ... ]" },
      { "type": "js", "data": "  }" },
      { "type": "js", "data": "}" },
      { "type": "html", "data": "</script>" }
    ],
    "highlightCode": [
      { "type": "html", "data": "<t-table-page" },
      { "type": "html", "data": "  :loading=\"table.loading\"" },
      { "type": "html", "data": "  :data=\"table.data\"" },
      { "type": "html", "data": "  :page-size=\"table.pageSize\"" },
      { "type": "html", "data": "  height=\"300px\"" },
      { "type": "html", "data": "  highlight-current-row" },
      { "type": "html", "data": ">" },
      { "type": "html", "data": "  <t-table-index />" },
      {
        "type": "html",
        "data": "  <t-table-column prop=\"date\" label=\"日期\" width=\"180\" />"
      },
      {
        "type": "html",
        "data": "  <t-table-column prop=\"name\" label=\"姓名\" width=\"180\" />"
      },
      { "type": "html", "data": "  <t-table-column prop=\"address\" label=\"地址\" />" },
      { "type": "html", "data": "</t-table-page>" },
      { "type": "html", "data": "" },
      { "type": "html", "data": "<script>" },
      { "type": "js", "data": "export default {" },
      { "type": "js", "data": "  data() {" },
      { "type": "js", "data": "    return {" },
      { "type": "js", "data": "      table: { loading: false, data: [], pageSize: 10 }" },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  mounted() {" },
      { "type": "js", "data": "    this.table.data = [ ... ]" },
      { "type": "js", "data": "  }" },
      { "type": "js", "data": "}" },
      { "type": "html", "data": "</script>" }
    ],
    "formatterCode": [
      { "type": "html", "data": "<t-table-page" },
      { "type": "html", "data": "  :loading=\"table.loading\"" },
      { "type": "html", "data": "  :data=\"table.data\"" },
      { "type": "html", "data": "  :page-size=\"table.pageSize\"" },
      { "type": "html", "data": "  height=\"300px\"" },
      { "type": "html", "data": ">" },
      { "type": "html", "data": "  <t-table-index />" },
      {
        "type": "html",
        "data": "  <t-table-column prop=\"date\" label=\"日期\" width=\"180\" />"
      },
      {
        "type": "html",
        "data": "  <t-table-column prop=\"name\" label=\"姓名\" width=\"180\" :v-formatter=\"tableColumnFormatter\" />"
      },
      { "type": "html", "data": "  <t-table-column prop=\"address\" label=\"地址\" />" },
      { "type": "html", "data": "</t-table-page>" },
      { "type": "html", "data": "" },
      { "type": "html", "data": "<script>" },
      { "type": "js", "data": "export default {" },
      { "type": "js", "data": "  data() {" },
      { "type": "js", "data": "    return {" },
      { "type": "js", "data": "      table: { loading: false, data: [], pageSize: 10 }" },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  mounted() {" },
      { "type": "js", "data": "    this.table.data = [ ... ]" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  method: {" },
      { "type": "js", "data": "    tableColumnFormatter(value, index) {" },
      {
        "type": "js",
        "data": "      return index % 4 == 0 && index != 0 ? '-- 小胖虎 --' : value"
      },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }" },
      { "type": "js", "data": "}" },
      { "type": "html", "data": "</script>" }
    ],
    "defaultSortCode": [
      { "type": "html", "data": "<t-table-page" },
      { "type": "html", "data": "  :loading=\"table.loading\"" },
      { "type": "html", "data": "  :data=\"table.data\"" },
      { "type": "html", "data": "  :page-size=\"table.pageSize\"" },
      { "type": "html", "data": "  :default-sort=\"{ prop: 'date', order: 'descending' }\"" },
      { "type": "html", "data": "  height=\"300px\"" },
      { "type": "html", "data": ">" },
      { "type": "html", "data": "  <t-table-index />" },
      {
        "type": "html",
        "data": "  <t-table-column prop=\"date\" label=\"日期\" width=\"180\" />"
      },
      {
        "type": "html",
        "data": "  <t-table-column prop=\"name\" label=\"姓名\" width=\"180\" />"
      },
      { "type": "html", "data": "  <t-table-column prop=\"address\" label=\"地址\" />" },
      { "type": "html", "data": "</t-table-page>" },
      { "type": "html", "data": "" },
      { "type": "html", "data": "<script>" },
      { "type": "js", "data": "export default {" },
      { "type": "js", "data": "  data() {" },
      { "type": "js", "data": "    return {" },
      { "type": "js", "data": "      table: { loading: false, data: [], pageSize: 10 }" },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  mounted() {" },
      { "type": "js", "data": "    this.table.data = [ ... ]" },
      { "type": "js", "data": "  }" },
      { "type": "js", "data": "}" },
      { "type": "html", "data": "</script>" }
    ],
    "summaryCode": [
      { "type": "html", "data": "<t-table-page" },
      { "type": "html", "data": "  :loading=\"table.loading\"" },
      { "type": "html", "data": "  :data=\"table.data\"" },
      { "type": "html", "data": "  :page-size=\"table.pageSize\"" },
      { "type": "html", "data": "  height=\"300px\"" },
      { "type": "html", "data": "  show-summary" },
      { "type": "html", "data": "  :summary-method=\"summaryValue\"" },
      { "type": "html", "data": ">" },
      { "type": "html", "data": "  <t-table-index />" },
      { "type": "html", "data": "  <t-table-column prop=\"name\" label=\"姓名\" />" },
      { "type": "html", "data": "  <t-table-column prop=\"date\" label=\"语文\" />" },
      { "type": "html", "data": "  <t-table-column prop=\"name1\" label=\"数学\" />" },
      { "type": "html", "data": "  <t-table-column prop=\"address\" label=\"英语\" />" },
      { "type": "html", "data": "</t-table-page>" },
      { "type": "html", "data": "" },
      { "type": "html", "data": "<script>" },
      { "type": "js", "data": "export default {" },
      { "type": "js", "data": "  data() {" },
      { "type": "js", "data": "    return {" },
      { "type": "js", "data": "      table: { loading: false, data: [], pageSize: 10 }" },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  mounted() {" },
      { "type": "js", "data": "    this.table.data = [ ... ]" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  method: {" },
      { "type": "js", "data": "    summaryValue({ columns, data }) {" },
      { "type": "js", "data": "      const value = []" },
      { "type": "js", "data": "      columns.forEach((columny, index) => {" },
      { "type": "js", "data": "        // 只找第一列放合计" },
      {
        "type": "js",
        "data": "        if (index === 0) return (value[index] = '平均分'), undefined"
      },
      { "type": "js", "data": "        let values = data.map((itemy) => {" },
      { "type": "js", "data": "          const value = Number(item[column.property])" },
      { "type": "js", "data": "          return isNaN(value) ? null : value" },
      { "type": "js", "data": "        }) // 把对应一列中的值全部取出，放到一个数组中" },
      { "type": "js", "data": "        values = values.filter((item) => item >= 0)" },
      {
        "type": "js",
        "data": "        const sum = values.reduce((prev, value) => prev + value, 0)"
      },
      {
        "type": "js",
        "data": "        if (sum > 0) value[index] = (sum / values.length).toFixed(1)"
      },
      { "type": "js", "data": "        else value[index] = ''" },
      { "type": "js", "data": "      })" },
      { "type": "js", "data": "      return value" },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }" },
      { "type": "js", "data": "}" },
      { "type": "html", "data": "</script>" }
    ],
    "spanMethodCode": [
      { "type": "html", "data": "<t-table-page" },
      { "type": "html", "data": "  :loading=\"table.loading\"" },
      { "type": "html", "data": "  :data=\"table.data\"" },
      { "type": "html", "data": "  :page-size=\"table.pageSize\"" },
      { "type": "html", "data": "  height=\"300px\"" },
      { "type": "html", "data": "  :span-method=\"spanMergeMethod\"" },
      { "type": "html", "data": ">" },
      { "type": "html", "data": "  <t-table-index />" },
      { "type": "html", "data": "  <t-table-column label=\"组合\" width=\"80px\" />" },
      { "type": "html", "data": "  <t-table-column prop=\"name\" label=\"姓名\" />" },
      { "type": "html", "data": "  <t-table-column prop=\"date\" label=\"语文\" />" },
      { "type": "html", "data": "  <t-table-column prop=\"name1\" label=\"数学\" />" },
      { "type": "html", "data": "  <t-table-column prop=\"address\" label=\"英语\" />" },
      { "type": "html", "data": "</t-table-page>" },
      { "type": "html", "data": "" },
      { "type": "html", "data": "<script>" },
      { "type": "js", "data": "export default {" },
      { "type": "js", "data": "  data() {" },
      { "type": "js", "data": "    return {" },
      { "type": "js", "data": "      table: { loading: false, data: [], pageSize: 10 }" },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  mounted() {" },
      { "type": "js", "data": "    this.table.data = [ ... ]" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  method: {" },
      {
        "type": "js",
        "data": "    spanMergeMethod({ row, column, rowIndex, columnIndex }) {"
      },
      { "type": "js", "data": "      if (columnIndex === 1) {" },
      {
        "type": "js",
        "data": "        if (rowIndex % 2 === 0) return { rowspan: 2, colspan: 1 }"
      },
      { "type": "js", "data": "        else return { rowspan: 0, colspan: 0 }" },
      { "type": "js", "data": "      }" },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }" },
      { "type": "js", "data": "}" },
      { "type": "html", "data": "</script>" }
    ],
    "backstageCode": [
      { "type": "html", "data": "<t-table-page" },
      { "type": "html", "data": "  :loading.sync=\"table.loading\"" },
      { "type": "html", "data": "  :data=\"table.data\"" },
      { "type": "html", "data": "  :real-time-page.sync=\"table.page\"" },
      { "type": "html", "data": "  :page-size=\"table.pageSize\"" },
      { "type": "html", "data": "  :page-total=\"table.total\"" },
      { "type": "html", "data": "  @current-change=\"handleTableCurrentChange\"" },
      { "type": "html", "data": ">" },
      { "type": "html", "data": "  <t-table-index type=\"count\"/>" },
      {
        "type": "html",
        "data": "  <t-table-column prop=\"date\" label=\"日期\" width=\"180\" />"
      },
      {
        "type": "html",
        "data": "  <t-table-column prop=\"name\" label=\"姓名\" width=\"180\" />"
      },
      { "type": "html", "data": "  <t-table-column prop=\"address\" label=\"地址\" />" },
      { "type": "html", "data": "</t-table-page>" },
      { "type": "html", "data": "" },
      { "type": "html", "data": "<script>" },
      { "type": "js", "data": "export default {" },
      { "type": "js", "data": "  data() {" },
      { "type": "js", "data": "    return {" },
      {
        "type": "js",
        "data": "      table: { loading: false, data: [], page: 1, pageSize: 10, total: 0 }"
      },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  mounted() {" },
      { "type": "js", "data": "    this.table.data = [ ... ]" },
      { "type": "js", "data": "  }," },
      { "type": "js", "data": "  method: {" },
      { "type": "js", "data": "    getUserInfo() {" },
      { "type": "js", "data": "      const data = [ ... ]" },
      { "type": "js", "data": "      const { page, pageSize } = this.table" },
      { "type": "js", "data": "      const total = data.length" },
      { "type": "js", "data": "      this.table.total = total" },
      { "type": "js", "data": "      const start = (page - 1) * pageSize" },
      { "type": "js", "data": "      const end = page * pageSize" },
      { "type": "js", "data": "      this.table.data = data.slice(start, end) as any" },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "" },
      { "type": "js", "data": "    handleTableCurrentChange({ currentPage }) {" },
      { "type": "js", "data": "      this.table.page = currentPage" },
      { "type": "js", "data": "      this.getUserInfo()" },
      { "type": "js", "data": "    }" },
      { "type": "js", "data": "  }" },
      { "type": "js", "data": "}" },
      { "type": "html", "data": "</script>" }
    ]
  },
  "attributes": [
    {
      "parameter": "loading",
      "directions": "是否加载中状态",
      "type": "Boolean",
      "optional": "—",
      "default": "false",
      "keyPoint": true
    },
    {
      "parameter": "data",
      "directions": "显示的数据",
      "type": "Array",
      "optional": "—",
      "default": "—",
      "keyPoint": true
    },
    {
      "parameter": "heigh",
      "directions": "分页表格总高度",
      "type": "String / Number",
      "optional": "—",
      "default": "—",
      "keyPoint": true
    },
    {
      "parameter": "max-heigh",
      "directions": "表格最大高度",
      "type": "String / Number",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "stripe",
      "directions": "是否为斑马纹",
      "type": "Boolean",
      "optional": "—",
      "default": "true"
    },
    {
      "parameter": "border",
      "directions": "是否带有纵向边框",
      "type": "Boolean",
      "optional": "—",
      "default": "true"
    },
    {
      "parameter": "size",
      "directions": "Table 的尺寸",
      "type": "Boolean",
      "optional": "medium / small / mini",
      "default": "small"
    },
    {
      "parameter": "fit",
      "directions": "列的宽度是否自撑开",
      "type": "Boolean",
      "optional": "—",
      "default": "true"
    },
    {
      "parameter": "show-header",
      "directions": "是否显示表头",
      "type": "Boolean",
      "optional": "—",
      "default": "true"
    },
    {
      "parameter": "highlight-current-row",
      "directions": "是否要高亮当前行",
      "type": "Boolean",
      "optional": "—",
      "default": "false"
    },
    {
      "parameter": "row-class-name",
      "directions": "行的 className 的回调方法，也可以使用字符串为所有行设置一个固定的 className。",
      "type": "Function({row, rowIndex}) / String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "row-style",
      "directions": "行的 style 的回调方法，也可以使用一个固定的 Object 为所有行设置一样的 Style。",
      "type": "Function({row, rowIndex}) / Object",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "cell-class-name",
      "directions": "单元格的 className 的回调方法，也可以使用字符串为所有单元格设置一个固定的 className。",
      "type": "Function({row, column, rowIndex, columnIndex}) / String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "cell-style",
      "directions": "单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有单元格设置一样的 Style。",
      "type": "Function({row, column, rowIndex, columnIndex}) / Object",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "header-row-class-name",
      "directions": "表头行的 className 的回调方法，也可以使用字符串为所有表头行设置一个固定的 className。",
      "type": "Function({row, rowIndex}) / String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "header-row-style",
      "directions": "表头行的 style 的回调方法，也可以使用一个固定的 Object 为所有表头行设置一样的 Style。",
      "type": "Function({row, rowIndex}) / Object",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "header-cell-class-name",
      "directions": "表头单元格的 className 的回调方法，也可以使用字符串为所有表头单元格设置一个固定的 className。",
      "type": "Function({row, column, rowIndex, columnIndex}) / String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "header-cell-style",
      "directions": "表头单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有表头单元格设置一样的 Style。",
      "type": "Function({row, column, rowIndex, columnIndex}) / Object",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "empty-text",
      "directions": "空数据时显示的文本内容，也可以通过 slot=\"empty\" 设置",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "default-expand-all",
      "directions": "是否默认展开所有行，当 Table 包含展开行存在或者为树形表格时有效。",
      "type": "Boolean",
      "optional": "—",
      "default": "false"
    },
    {
      "parameter": "default-sort",
      "directions": "默认的排序列的 prop 和顺序。它的prop属性指定默认的排序的列，order指定默认排序的顺序。",
      "type": "Boolean",
      "optional": "prop: 指定默认的排序的列, order:ascending, descending",
      "default": "—"
    },
    {
      "parameter": "tooltip-effect",
      "directions": "tooltip effect 属性, value: dark/light。",
      "type": "String",
      "optional": "dark / light",
      "default": "—"
    },
    {
      "parameter": "show-summary",
      "directions": "是否在表尾显示合计行",
      "type": "Boolean",
      "optional": "—",
      "default": "false"
    },
    {
      "parameter": "sum-text",
      "directions": "合计行第一列的文本",
      "type": "String",
      "optional": "—",
      "default": "合计"
    },
    {
      "parameter": "summary-method",
      "directions": "自定义的合计计算方法",
      "type": "Function({ columns, data })",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "span-method",
      "directions": "合并行或列的计算方法",
      "type": "Function({ row, column, rowIndex, columnIndex })",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "lazy",
      "directions": "是否懒加载子节点数据",
      "type": "Boolean",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "load",
      "directions": "加载子节点数据的函数，lazy 为 true 时生效，函数第二个参数包含了节点的层级信息",
      "type": "Function(row, treeNode, resolve)",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "tree-props",
      "directions": "渲染嵌套数据的配置选项",
      "type": "Object: { hasChildren: 'hasChildren', children: 'children' }",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "has-freeze",
      "directions": "是否冻结数据",
      "type": "Boolean",
      "optional": "—",
      "default": "true",
      "keyPoint": true
    },
    {
      "parameter": "page-size",
      "directions": "每页数量",
      "type": "Number",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "page-disabled",
      "directions": "禁用",
      "type": "Boolean",
      "optional": "—",
      "default": "false"
    },
    {
      "parameter": "real-time-page",
      "directions": "当前页",
      "type": "Number",
      "optional": "—",
      "default": "1"
    },
    {
      "parameter": "page-total",
      "directions": "总页数",
      "type": "Number",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "prev-text",
      "directions": "上一页文字",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "next-text",
      "directions": "下一页文字",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "scrollbar-to-top",
      "directions": "数据更新后滚动条是否回到顶部",
      "type": "Boolean",
      "optional": "—",
      "default": "true",
      "keyPoint": true
    }
  ],
  "events": [
    {
      "name": "select",
      "directions": "当用户手动勾选数据行的 Checkbox 时触发的事件",
      "parameter": "selection, row"
    },
    {
      "name": "select-all",
      "directions": "当用户手动勾选全选 Checkbox 时触发的事件",
      "parameter": "selection"
    },
    {
      "name": "selection-change",
      "directions": "当选择项发生变化时会触发该事件",
      "parameter": "selection"
    },
    {
      "name": "row-click",
      "directions": "当某一行被点击时会触发该事件",
      "parameter": "row, column, event"
    },
    {
      "name": "row-contextmenu",
      "directions": "当某一行被鼠标右键点击时会触发该事件",
      "parameter": "row, column, event"
    },
    {
      "name": "row-dblclick",
      "directions": "当某一行被双击时会触发该事件",
      "parameter": "row, column, event"
    },
    {
      "name": "header-click",
      "directions": "当某一列的表头被点击时会触发该事件",
      "parameter": "column, event"
    },
    {
      "name": "header-contextmenu",
      "directions": "当某一列的表头被鼠标右键点击时触发该事件",
      "parameter": "column, event"
    },
    {
      "name": "header-dragend",
      "directions": "当拖动表头改变了列的宽度的时候会触发该事件",
      "parameter": "newWidth, oldWidth, column, event"
    },
    {
      "name": "current-change",
      "directions": "currentPage 改变时会触发",
      "parameter": "{ currentPage, pageSize }"
    }
  ],
  "tableIndexAttributes": [
    {
      "parameter": "label",
      "directions": "显示的标题",
      "type": "String",
      "optional": "—",
      "default": "编号"
    },
    {
      "parameter": "width",
      "directions": "对应列的宽度",
      "type": "String",
      "optional": "—",
      "default": "80"
    },
    {
      "parameter": "type",
      "directions": "类型，count：每页计数",
      "type": "String",
      "optional": "count",
      "default": "—",
      "keyPoint": true
    },
    {
      "parameter": "fixed",
      "directions": "列是否固定在左侧或者右侧，true 表示固定在左侧",
      "type": "String / Bootean",
      "optional": "true / left / right",
      "default": "true"
    },
    {
      "parameter": "resizable",
      "directions": "对应列是否可以通过拖动改变宽度（需要在 el-table 上设置 border 属性为真）",
      "type": "Bootean",
      "optional": "—",
      "default": "false"
    }
  ],
  "tableCheckboxAttributes": [
    {
      "parameter": "width",
      "directions": "对应列的宽度",
      "type": "String",
      "optional": "—",
      "default": "60"
    },
    {
      "parameter": "fixed",
      "directions": "列是否固定在左侧或者右侧，true 表示固定在左侧",
      "type": "String / Bootean",
      "optional": "true / left / right",
      "default": "true"
    },
    {
      "parameter": "resizable",
      "directions": "对应列是否可以通过拖动改变宽度（需要在 el-table 上设置 border 属性为真）",
      "type": "Bootean",
      "optional": "—",
      "default": "false"
    },
    {
      "parameter": "row-key",
      "directions": "行数据的 Key，用来优化 Table 的渲染；在使用 reserve-selection 功能与显示树形数据时，该属性是必填的。类型为 String 时，支持多层访问：user.info.id，但不支持 user.info[0].id，此种情况请使用 Function",
      "type": "Function(row) / String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "selectable",
      "directions": "仅对 type=selection 的列有效，类型为 Function，Function 的返回值用来决定这一行的 CheckBox 是否可以勾选",
      "type": "Function(row, index)",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "reserve-selection",
      "directions": "仅对 type=selection 的列有效，类型为 Boolean，为 true 则会在数据更新之后保留之前选中的数据（需指定 row-key）",
      "type": "Boolean",
      "optional": "—",
      "default": "false"
    }
  ],
  "tableColumnAttributes": [
    {
      "parameter": "type",
      "directions": "对应列的类型。如果设置了 selection 则显示多选框；如果设置了 index 则显示该行的索引（从 1 开始计算）；如果设置了 expand 则显示为一个可展开的按钮",
      "type": "String",
      "optional": "selection / index / expand",
      "default": "—"
    },
    {
      "parameter": "index",
      "directions": "如果设置了 type=index，可以通过传递 index 属性来自定义索引",
      "type": "number / Function(index)",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "column-key",
      "directions": "column 的 key，如果需要使用 filter-change 事件，则需要此属性标识是哪个 column 的筛选条件",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "label",
      "directions": "显示的标题",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "prop",
      "directions": "对应列内容的字段名，也可以使用 property 属性",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "width",
      "directions": "对应列的宽度",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "min-width",
      "directions": "对应列的最小宽度，与 width 的区别是 width 是固定的，min-width 会把剩余宽度按比例分配给设置了 min-width 的列",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "fixed",
      "directions": "列是否固定在左侧或者右侧，true 表示固定在左侧",
      "type": "String / Boolean",
      "optional": "true / left / right",
      "default": "—"
    },
    {
      "parameter": "render-header",
      "directions": "列标题 Label 区域渲染使用的 Function",
      "type": "Function(h, { column, $index })",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "sortable",
      "directions": "对应列是否可以排序，如果设置为 'custom'，则代表用户希望远程排序，需要监听 Table 的 sort-change 事件",
      "type": "Boolean / String",
      "optional": "true / false / 'custom'",
      "default": "false"
    },
    {
      "parameter": "sort-method",
      "directions": "对数据进行排序的时候使用的方法，仅当 sortable 设置为 true 的时候有效，需返回一个数字，和 Array.sort 表现一致",
      "type": "Function(a, b)",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "sort-by",
      "directions": "指定数据按照哪个属性进行排序，仅当 sortable 设置为 true 且没有设置 sort-method 的时候有效。如果 sort-by 为数组，则先按照第 1 个属性排序，如果第 1 个相等，再按照第 2 个排序，以此类推",
      "type": "String / Array /Function(row, index)",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "sort-orders",
      "directions": "数据在排序时所使用排序策略的轮转顺序，仅当 sortable 为 true 时有效。需传入一个数组，随着用户点击表头，该列依次按照数组中元素的顺序进行排序",
      "type": "Array",
      "optional": "数组中的元素需为以下三者之一：ascending 表示升序，descending 表示降序，null 表示还原为原始顺序",
      "default": "['ascending', 'descending', null]"
    },
    {
      "parameter": "resizable",
      "directions": "对应列是否可以通过拖动改变宽度（需要在 el-table 上设置 border 属性为真）",
      "type": "Boolean",
      "optional": "—",
      "default": "true"
    },
    {
      "parameter": "formatter",
      "directions": "用来格式化内容",
      "type": "Function(row, column, cellValue, index)",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "v-formatter",
      "directions": "用来格式化内容",
      "type": "Function(cellValue, index)",
      "optional": "—",
      "default": "—",
      "keyPoint": true
    },
    {
      "parameter": "show-overflow-tooltip",
      "directions": "当内容过长被隐藏时显示 tooltip",
      "type": "Boolean",
      "optional": "—",
      "default": "false"
    },
    {
      "parameter": "align",
      "directions": "对齐方式",
      "type": "String",
      "optional": "left / center / right",
      "default": "center"
    },
    {
      "parameter": "header-align",
      "directions": "表头对齐方式，若不设置该项，则使用表格的对齐方式",
      "type": "String",
      "optional": "left / center / right",
      "default": "—"
    },
    {
      "parameter": "class-name",
      "directions": "列的 className",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "label-class-name",
      "directions": "当前列标题的自定义类名",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "row-key",
      "directions": "行数据的 Key，用来优化 Table 的渲染；在使用 reserve-selection 功能与显示树形数据时，该属性是必填的。类型为 String 时，支持多层访问：user.info.id，但不支持 user.info[0].id，此种情况请使用 Function",
      "type": "Function(row) / String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "selectable",
      "directions": "仅对 type=selection 的列有效，类型为 Function，Function 的返回值用来决定这一行的 CheckBox 是否可以勾选",
      "type": "Function(row, index)",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "reserve-selection",
      "directions": "仅对 type=selection 的列有效，类型为 Boolean，为 true 则会在数据更新之后保留之前选中的数据（需指定 row-key）",
      "type": "Boolean",
      "optional": "—",
      "default": "false"
    },
    {
      "parameter": "filters",
      "directions": "数据过滤的选项，数组格式，数组中的元素需要有 text 和 value 属性。",
      "type": "Array[{ text, value }]",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "filter-placement",
      "directions": "过滤弹出框的定位",
      "type": "String",
      "optional": "与 Tooltip 的 placement 属性相同",
      "default": "—"
    },
    {
      "parameter": "filter-multiple",
      "directions": "数据过滤的选项是否多选",
      "type": "Boolean",
      "optional": "—",
      "default": "true"
    },
    {
      "parameter": "filter-method",
      "directions": "数据过滤使用的方法，如果是多选的筛选项，对每一条数据会执行多次，任意一次返回 true 就会显示。",
      "type": "Function(value, row, column)",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "filtered-value",
      "directions": "选中的数据过滤项，如果需要自定义表头过滤的渲染方式，可能会需要此属性。",
      "type": "Array",
      "optional": "—",
      "default": "—"
    }
  ],
  "tableColumnSlot": [
    { "name": "—", "directions": "自定义列的内容，参数为 { row, column, $index }" },
    { "name": "header", "directions": "自定义表头的内容. 参数为 { column, $index }" }
  ],
  "tableOperateAttributes": [
    {
      "parameter": "label",
      "directions": "显示的标题",
      "type": "String",
      "optional": "—",
      "default": "操作"
    },
    {
      "parameter": "width",
      "directions": "对应列的宽度",
      "type": "String",
      "optional": "—",
      "default": "120"
    },
    {
      "parameter": "fixed",
      "directions": "列是否固定在左侧或者右侧，true 表示固定在左侧",
      "type": "String / Bootean",
      "optional": "true / left / right",
      "default": "right"
    },
    {
      "parameter": "render-header",
      "directions": "列标题 Label 区域渲染使用的 Function",
      "type": "Function(h, { column, $index })",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "resizable",
      "directions": "对应列是否可以通过拖动改变宽度（需要在 el-table 上设置 border 属性为真）",
      "type": "Bootean",
      "optional": "—",
      "default": "false"
    }
  ],
  "tableOperateSlot": [
    { "name": "—", "directions": "自定义列的内容，参数为 { row, column, $index }" },
    { "name": "header", "directions": "自定义表头的内容. 参数为 { column, $index }" }
  ],
  "tableButtonAttributes": [
    {
      "parameter": "loading",
      "directions": "是否加载中状态",
      "type": "Boolean",
      "optional": "—",
      "default": "false"
    },
    {
      "parameter": "disabled",
      "directions": "是否禁用状态",
      "type": "Boolean",
      "optional": "—",
      "default": "false"
    },
    {
      "parameter": "icon",
      "directions": "图标类名",
      "type": "String",
      "optional": "—",
      "default": "—"
    },
    {
      "parameter": "autofocus",
      "directions": "是否默认聚焦",
      "type": "Bootean",
      "optional": "—",
      "default": "false"
    },
    {
      "parameter": "color",
      "directions": "文字颜色",
      "type": "String",
      "optional": "—",
      "default": "—",
      "keyPoint": true
    },
    {
      "parameter": "hover-color",
      "directions": "文字悬浮颜色",
      "type": "String",
      "optional": "—",
      "default": "—",
      "keyPoint": true
    },
    {
      "parameter": "preview-src",
      "directions": "开启图片预览功能",
      "type": "String / Array",
      "optional": "—",
      "default": "—",
      "keyPoint": true
    }
  ]
}
